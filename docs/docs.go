// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v1/atec/packages": {
            "post": {
                "security": [
                    {
                        "AdministratorLevelAuth": []
                    }
                ],
                "description": "Create new ATEC questionaire package",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ATEC Package"
                ],
                "summary": "Create new ATEC questionaire package",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "ATEC questionnarie package details",
                        "name": "create_package_input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rest.CreatePackageInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/rest.StandardSuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/rest.CreatePackageOutput"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/rest.StandardErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/rest.StandardErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/atec/packages/active": {
            "get": {
                "description": "Get all active packages",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ATEC Package"
                ],
                "summary": "Get all active packages",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/rest.StandardSuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/rest.SearchActivePackageOutput"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/rest.StandardErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/rest.StandardErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/atec/packages/{package_id}": {
            "put": {
                "security": [
                    {
                        "AdministratorLevelAuth": []
                    }
                ],
                "description": "Update existing ATEC questionnarie package",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ATEC Package"
                ],
                "summary": "Update existing ATEC questionnarie package",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "package id (UUID v4)",
                        "name": "package_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "ATEC questionnarie package details",
                        "name": "update_package_input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rest.UpdatePackageInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/rest.StandardSuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/rest.UpdatePackageOutput"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/rest.StandardErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/rest.StandardErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AdministratorLevelAuth": []
                    }
                ],
                "description": "Delete ATEC questionnaire package",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ATEC Package"
                ],
                "summary": "Delete ATEC questionnaire package",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "package ID to be deleted (UUID v4)",
                        "name": "package_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/rest.StandardErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/rest.StandardErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "AdministratorLevelAuth": []
                    }
                ],
                "description": "Update existing ATEC questionnarie package activation status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ATEC Package"
                ],
                "summary": "Update package activation status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "package ID to be activated/deactivated (UUID v4)",
                        "name": "package_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "activation status",
                        "name": "activation_package_input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rest.ActivationPackageInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/rest.StandardSuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/rest.ActivationPackageOutput"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/rest.StandardErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/rest.StandardErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/atec/questionnaires": {
            "get": {
                "description": "Used when a user wants to get an active ATEC questionnaire to be filled later",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Questionnaire"
                ],
                "summary": "Initialize ATEC questionnaire or get one",
                "parameters": [
                    {
                        "type": "string",
                        "description": "optional to get questionnaire from its package id. if empty, a default one will be returned",
                        "name": "package_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success response",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/rest.StandardSuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/rest.GetATECQuestionnaireOutput"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/rest.StandardErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/rest.StandardErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "When submiting questionnaire for a child, ensure using the parent's account or Admin level account. otherwise will be blocked.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Questionnaire"
                ],
                "summary": "Submit questionnaire result",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Optional jwt auth token to be used if want to fill questionnaire based on a registered child",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "description": "full questionnaire answer",
                        "name": "submit_questionnaire_input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rest.SubmitQuestionnaireInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/rest.StandardSuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/rest.SubmitQuestionnaireOutput"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/rest.StandardErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/rest.StandardErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/atec/questionnaires/results": {
            "get": {
                "security": [
                    {
                        "TherapistLevelAuth": []
                    }
                ],
                "description": "Search through all the submitted ATEC questionnaires to the systems",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Questionnaire"
                ],
                "summary": "Search questionnaire result",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT token to prove that you're admin",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "child_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "created_by_id",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "package_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "result_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success response",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/rest.StandardSuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/rest.SearchQUestionnaireResultsOutput"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/rest.StandardErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/rest.StandardErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/atec/questionnaires/results/my": {
            "get": {
                "security": [
                    {
                        "ParentLevelAuth": []
                    }
                ],
                "description": "Get all questionnaires result submitted by the requester account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Questionnaire"
                ],
                "summary": "Get my quesionnaires results",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT token from auth process",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success response",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/rest.StandardSuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/rest.SearchQUestionnaireResultsOutput"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/rest.StandardErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/rest.StandardErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/atec/questionnaires/results/{result_id}": {
            "get": {
                "description": "Download quesionnaire result as image",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "image/jpeg"
                ],
                "tags": [
                    "Questionnaire"
                ],
                "summary": "Download quesionnaire result as image",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Optional jwt auth token to be used if want to download result owned by a specific owner",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "ID of the submitted questionnaire (UUID v4)",
                        "name": "result_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/rest.StandardErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/rest.StandardErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/auth/login": {
            "post": {
                "description": "Use this endpoint to login with your username and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Gain access to the system by authenticating using a registered account",
                "parameters": [
                    {
                        "description": "account detail such as email and password to log in",
                        "name": "login_input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rest.LoginInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/rest.StandardSuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/rest.LoginOutput"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/rest.StandardErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Authentication Failed",
                        "schema": {
                            "$ref": "#/definitions/rest.StandardErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/rest.StandardErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/auth/password": {
            "get": {
                "description": "After user click the link from email for reset password, he will be redirected here to change the password. This might not work in this page\nsince the returned value in this API is HTML",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "text/html"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Webpage's form to change user's account password",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/rest.StandardSuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request\"\t\"validation error",
                        "schema": {
                            "$ref": "#/definitions/rest.StandardErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/rest.StandardErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "After using init reset password method, the resulting JWT token can be used here\nto authorize the password changes.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Change user's account password",
                "parameters": [
                    {
                        "description": "the email of the account which password will be reset",
                        "name": "change_password_input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rest.ResetPasswordInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/rest.StandardSuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/rest.ResetPasswordOutput"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request\"\t\"validation error",
                        "schema": {
                            "$ref": "#/definitions/rest.StandardErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/rest.StandardErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "If the user wants to change their password, use this API.\nwhen the request succeed, an email containing confirmation link will\nbe sent to the account email.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Initiate change password process for an active account",
                "parameters": [
                    {
                        "description": "the email of the account which password will be reset",
                        "name": "init_change_password_input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rest.InitResetPasswordInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/rest.StandardSuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/rest.InitResetPasswordOutput"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request\"\t\"validation error",
                        "schema": {
                            "$ref": "#/definitions/rest.StandardErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/rest.StandardErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/auth/signup": {
            "post": {
                "description": "Use this API endpoint to create a new account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Create a new account to access user only resources within this system",
                "parameters": [
                    {
                        "description": "Login Credentials",
                        "name": "signup_input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rest.SignupInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/rest.StandardSuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/rest.SignupOutput"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request / validation error",
                        "schema": {
                            "$ref": "#/definitions/rest.StandardErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/auth/signup/resend": {
            "post": {
                "description": "If something happen during account verification that cause the email not received\nor the email is lost, use this API to resend the verification email",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Resend email for account verification",
                "parameters": [
                    {
                        "description": "resend signup input",
                        "name": "resend_signup_input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rest.ResendVerificationInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/rest.StandardSuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/rest.ResendVerificationOutput"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request / validation error",
                        "schema": {
                            "$ref": "#/definitions/rest.StandardErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "$ref": "#/definitions/rest.StandardErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/rest.StandardErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/auth/verify": {
            "get": {
                "description": "Confirmation method to ensure the email used when signup is active and owned by requester.\nIf the confirmation token is valid, the account will be activated\nand will be able to be used on login. Otherwise, the opposite will happen.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Validate account after signup",
                "parameters": [
                    {
                        "type": "string",
                        "description": "validation token received from email after signup in form of a jwt token",
                        "name": "validation_token",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/rest.StandardSuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/rest.VerifyAccountOutput"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request / validation error",
                        "schema": {
                            "$ref": "#/definitions/rest.StandardErrorResponse"
                        }
                    },
                    "401": {
                        "description": "invalid or expired verification token. details will be given in the error message",
                        "schema": {
                            "$ref": "#/definitions/rest.StandardErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/childern": {
            "get": {
                "security": [
                    {
                        "ParentLevelAuth": []
                    }
                ],
                "description": "Get all childern registered under this account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Childern"
                ],
                "summary": "Get all childern registered under this account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "limit searching param",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "offset searching param",
                        "name": "offset",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/rest.StandardSuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/rest.GetMyChildernOutput"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/rest.StandardErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/rest.StandardErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ParentLevelAuth": []
                    }
                ],
                "description": "Register a new child",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Childern"
                ],
                "summary": "Register a new child",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "child details",
                        "name": "register_child_input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rest.RegisterChildInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/rest.StandardSuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/rest.RegisterChildOutput"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/rest.StandardErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/rest.StandardErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/childern/search": {
            "get": {
                "security": [
                    {
                        "TherapistLevelAuth": []
                    }
                ],
                "description": "Search childern data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Childern"
                ],
                "summary": "Search childern data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "name": "gender",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "example": 1,
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "parent_user_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/rest.StandardSuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/rest.SearchChildernOutput"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/rest.StandardErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/rest.StandardErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/childern/{child_id}": {
            "put": {
                "security": [
                    {
                        "ParentLevelAuth": []
                    }
                ],
                "description": "Update child data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Childern"
                ],
                "summary": "Update child data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Child ID to be updated (UUID v4)",
                        "name": "child_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "new child details",
                        "name": "update_child_input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rest.UpdateChildernInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/rest.StandardSuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/rest.UpdateChildernOutput"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/rest.StandardErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/rest.StandardErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/childern/{child_id}/stats": {
            "get": {
                "security": [
                    {
                        "ParentLevelAuth": []
                    }
                ],
                "description": "The returned data will be JSON but contains sufficient data to be drawn as graph on frontend",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Childern"
                ],
                "summary": "Get child ATEC score history",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Child ID (UUID v4)",
                        "name": "child_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/rest.StandardSuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/usecase.StatisticComponent"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/rest.StandardErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/rest.StandardErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.AnswerDetail": {
            "type": "object",
            "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                    "type": "integer"
                }
            }
        },
        "model.AnswerOption": {
            "type": "object",
            "required": [
                "description",
                "id"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "score": {
                    "type": "integer",
                    "minimum": 0
                }
            }
        },
        "model.ChecklistGroup": {
            "type": "object",
            "required": [
                "custom_name",
                "options",
                "questions"
            ],
            "properties": {
                "custom_name": {
                    "description": "CustomName can be used to be displayed to user. if empty, the one from\nthe template will be used",
                    "type": "string"
                },
                "options": {
                    "type": "array",
                    "minItems": 1,
                    "uniqueItems": true,
                    "items": {
                        "$ref": "#/definitions/model.AnswerOption"
                    }
                },
                "questions": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "model.ImageResultAttributeKey": {
            "type": "object",
            "required": [
                "indication",
                "result_id",
                "submitted_at",
                "title",
                "total"
            ],
            "properties": {
                "indication": {
                    "type": "string"
                },
                "result_id": {
                    "type": "string"
                },
                "submitted_at": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "total": {
                    "type": "string"
                }
            }
        },
        "model.IndicationCategory": {
            "type": "object",
            "required": [
                "detail",
                "maximum_score",
                "name"
            ],
            "properties": {
                "detail": {
                    "type": "string"
                },
                "maximum_score": {
                    "type": "integer",
                    "minimum": 1
                },
                "minimum_score": {
                    "type": "integer",
                    "minimum": 0
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.Questionnaire": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/definitions/model.ChecklistGroup"
            }
        },
        "model.ResultDetail": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/definitions/model.SubtestGrade"
            }
        },
        "model.SubtestGrade": {
            "type": "object",
            "properties": {
                "grade": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "rest.ActivationPackageInput": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "boolean"
                }
            }
        },
        "rest.ActivationPackageOutput": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "rest.CreatePackageInput": {
            "type": "object",
            "required": [
                "image_result_attribute_key",
                "indication_categories",
                "package_name",
                "questionnaire"
            ],
            "properties": {
                "image_result_attribute_key": {
                    "$ref": "#/definitions/model.ImageResultAttributeKey"
                },
                "indication_categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.IndicationCategory"
                    }
                },
                "package_name": {
                    "type": "string"
                },
                "questionnaire": {
                    "$ref": "#/definitions/model.Questionnaire"
                }
            }
        },
        "rest.CreatePackageOutput": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "rest.GetATECQuestionnaireOutput": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "questionnaire": {
                    "$ref": "#/definitions/model.Questionnaire"
                }
            }
        },
        "rest.GetMyChildernOutput": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "date_of_birth": {
                    "type": "string"
                },
                "gender": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "parent_user_id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "rest.InitResetPasswordInput": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "rest.InitResetPasswordOutput": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "rest.LoginInput": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 8
                }
            }
        },
        "rest.LoginOutput": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "rest.QuestionnaireGrade": {
            "type": "object",
            "properties": {
                "detail": {
                    "$ref": "#/definitions/model.ResultDetail"
                },
                "indication": {
                    "$ref": "#/definitions/model.IndicationCategory"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "rest.RegisterChildInput": {
            "type": "object",
            "required": [
                "date_of_birth",
                "name"
            ],
            "properties": {
                "date_of_birth": {
                    "type": "string",
                    "example": "2001-11-29 (YYYY-MM-DD)"
                },
                "gender": {
                    "type": "boolean",
                    "example": true
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "rest.RegisterChildOutput": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "rest.ResendVerificationInput": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "rest.ResendVerificationOutput": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "rest.ResetPasswordInput": {
            "type": "object",
            "required": [
                "new_password",
                "token"
            ],
            "properties": {
                "new_password": {
                    "type": "string",
                    "minLength": 8
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "rest.ResetPasswordOutput": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "rest.SearchActivePackageOutput": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "indication_categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.IndicationCategory"
                    }
                },
                "name": {
                    "type": "string"
                },
                "questionnaire": {
                    "$ref": "#/definitions/model.Questionnaire"
                }
            }
        },
        "rest.SearchChildernOutput": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "date_of_birth": {
                    "type": "string"
                },
                "gender": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "parent_user_id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "rest.SearchQUestionnaireResultsOutput": {
            "type": "object",
            "properties": {
                "answer": {
                    "$ref": "#/definitions/model.AnswerDetail"
                },
                "child_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "package_id": {
                    "type": "string"
                },
                "result": {
                    "$ref": "#/definitions/model.ResultDetail"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "rest.SignupInput": {
            "type": "object",
            "required": [
                "email",
                "password",
                "username"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "string@string.com"
                },
                "password": {
                    "type": "string",
                    "minLength": 8,
                    "example": "password123"
                },
                "username": {
                    "type": "string",
                    "example": "username"
                }
            }
        },
        "rest.SignupOutput": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "confirmation link sent to your email"
                }
            }
        },
        "rest.StandardErrorResponse": {
            "type": "object",
            "properties": {
                "error_code": {
                    "type": "string",
                    "example": "missing required fields on input"
                },
                "error_message": {
                    "type": "string",
                    "example": "Bad Request"
                },
                "status_code": {
                    "type": "integer",
                    "example": 400
                }
            }
        },
        "rest.StandardSuccessResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string",
                    "example": "success"
                },
                "status_code": {
                    "type": "integer",
                    "example": 200
                }
            }
        },
        "rest.SubmitQuestionnaireInput": {
            "type": "object",
            "required": [
                "answers"
            ],
            "properties": {
                "answers": {
                    "$ref": "#/definitions/model.AnswerDetail"
                },
                "child_id": {
                    "type": "string"
                },
                "package_id": {
                    "type": "string"
                }
            }
        },
        "rest.SubmitQuestionnaireOutput": {
            "type": "object",
            "properties": {
                "child_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "grade": {
                    "$ref": "#/definitions/rest.QuestionnaireGrade"
                },
                "result_id": {
                    "type": "string"
                }
            }
        },
        "rest.UpdateChildernInput": {
            "type": "object",
            "required": [
                "date_of_birth",
                "name"
            ],
            "properties": {
                "date_of_birth": {
                    "type": "string",
                    "example": "2001-11-29 (YYYY-MM-DD)"
                },
                "gender": {
                    "type": "boolean",
                    "example": true
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "rest.UpdateChildernOutput": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "rest.UpdatePackageInput": {
            "type": "object",
            "required": [
                "image_result_attribute_key",
                "indication_categories",
                "package_name",
                "questionnaire"
            ],
            "properties": {
                "image_result_attribute_key": {
                    "$ref": "#/definitions/model.ImageResultAttributeKey"
                },
                "indication_categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.IndicationCategory"
                    }
                },
                "package_name": {
                    "type": "string"
                },
                "questionnaire": {
                    "$ref": "#/definitions/model.Questionnaire"
                }
            }
        },
        "rest.UpdatePackageOutput": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "rest.VerifyAccountOutput": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "your account is now activated and can be used"
                }
            }
        },
        "usecase.StatisticComponent": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "detail": {
                    "$ref": "#/definitions/model.ResultDetail"
                },
                "total": {
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "AdministratorLevelAuth": {
            "description": "Bearer Token authentication for secure endpoints accessible only by administrator level user",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        },
        "ParentLevelAuth": {
            "description": "Bearer Token authentication for secure endpoints accessible only by registered user with auth token",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        },
        "TherapistLevelAuth": {
            "description": "Bearer Token authentication for secure endpoints accessible only by therapist level user",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "ATEC API Docs",
	Description:      "this is the ATEC method implemented using API",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
